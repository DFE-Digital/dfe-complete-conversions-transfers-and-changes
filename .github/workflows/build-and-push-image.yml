name: Deployment pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        type: environment
        description: "Choose an environment to deploy to"
        required: true

concurrency:
  group: ${{ github.workflow }}-${{ github.event.inputs.environment }}

env:
  DOCKER_IMAGE: complete-app

jobs:
  set-env:
    name: Determine environment
    runs-on: ubuntu-22.04
    outputs:
      environment: ${{ steps.var.outputs.environment }}
      branch: ${{ steps.var.outputs.branch }}
      checked-out-sha: ${{ steps.var.outputs.checked-out-sha }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - id: var
        run: |
          GIT_REF=${{ github.ref }}
          GIT_BRANCH=${GIT_REF##*/}
          INPUT=${{ github.event.inputs.environment }}
          ENVIRONMENT=${INPUT:-"development"}
          CHECKED_OUT_SHA="$(git log -1 '--format=format:%H')"
          echo "environment=${ENVIRONMENT,,}" >> $GITHUB_OUTPUT
          echo "branch=$GIT_BRANCH" >> $GITHUB_OUTPUT
          echo "checked-out-sha=${CHECKED_OUT_SHA}" >> $GITHUB_OUTPUT

  build-and-push-image:
    name: Build and push to ACR
    needs: set-env
    runs-on: ubuntu-22.04
    environment: ${{ needs.set-env.outputs.environment }}
    outputs:
      image: ${{ steps.build.outputs.image }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - name: Azure Container Registry login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.AZURE_ACR_CLIENTID }}
          password: ${{ secrets.AZURE_ACR_SECRET }}
          registry: ${{ secrets.AZURE_ACR_URL }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.ref }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and push docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
          target: web
          build-args: |
            RAILS_ENV=development
          tags: |
            ${{ secrets.AZURE_ACR_URL }}/${{ env.DOCKER_IMAGE }}:${{ needs.set-env.outputs.branch }}
            ${{ secrets.AZURE_ACR_URL }}/${{ env.DOCKER_IMAGE }}:sha-${{ needs.set-env.outputs.checked-out-sha }}
            ${{ secrets.AZURE_ACR_URL }}/${{ env.DOCKER_IMAGE }}:latest
          push: true

      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Output the image name
        id: build
        run: |
          echo "image=${{ secrets.AZURE_ACR_URL }}/${{ env.DOCKER_IMAGE }}:sha-${{ needs.set-env.outputs.checked-out-sha }}" >> $GITHUB_OUTPUT

  deployment:
    name: Update Container Apps
    uses: ./.github/workflows/update-container-app-revision.yml
    needs: [ build-and-push-image, set-env ]
    with:
      environment: ${{ needs.set-env.outputs.environment }}
      branch: ${{ needs.set-env.outputs.branch }}
      image: ${{ needs.build-and-push-image.outputs.image }}
    secrets: inherit
