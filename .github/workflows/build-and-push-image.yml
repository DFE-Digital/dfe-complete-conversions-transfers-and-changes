name: Deploy to environment

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        type: environment
        description: "Choose an environment to deploy to"
        required: true

concurrency:
  group: ${{ github.workflow }}-${{ github.event.inputs.environment }}-${{ github.run_number }}

env:
  IMAGE_NAME: complete-app

jobs:
  set-env:
    name: Determine environment
    runs-on: ubuntu-22.04
    outputs:
      environment: ${{ steps.var.outputs.environment }}
      branch: ${{ steps.var.outputs.branch }}
      checked-out-sha: ${{ steps.var.outputs.checked-out-sha }}
      date: ${{ steps.var.outputs.date }}
      image-name: ${{ steps.var.outputs.image-name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - id: var
        run: |
          GIT_REF=${{ github.ref_name }}
          GIT_BRANCH=${GIT_REF##*/}
          INPUT=${{ github.event.inputs.environment }}
          ENVIRONMENT=${INPUT:-"development"}
          CHECKED_OUT_SHA="$(git log -1 '--format=format:%H')"
          TIME="$(date)"
          echo "environment=${ENVIRONMENT,,}" >> $GITHUB_OUTPUT
          echo "branch=$GIT_BRANCH" >> $GITHUB_OUTPUT
          echo "checked-out-sha=${CHECKED_OUT_SHA}" >> $GITHUB_OUTPUT
          echo "date=${TIME}" >> $GITHUB_OUTPUT
          echo "image-name=${{ env.IMAGE_NAME }}" >> $GITHUB_OUTPUT

  build:
    name: Build
    needs: [ set-env ]
    permissions:
      packages: write
    uses: DFE-Digital/deploy-azure-container-apps-action/.github/workflows/build.yml@v5.0.0
    with:
      environment: ${{ needs.set-env.outputs.environment }}
      docker-image-name: ${{ needs.set-env.outputs.image-name }}
      docker-build-args: |
        RAILS_ENV=development
        CURRENT_GIT_SHA="${{ needs.set-env.outputs.checked-out-sha }}"
        TIME_OF_BUILD="${{ needs.set-env.outputs.date }}"

  import:
    name: Import
    needs: [ set-env, build ]
    permissions:
      id-token: write
    uses: DFE-Digital/deploy-azure-container-apps-action/.github/workflows/import.yml@v5.0.0
    with:
      environment: ${{ needs.set-env.outputs.environment }}
      docker-image-name: ${{ needs.set-env.outputs.image-name }}
    secrets:
      azure-tenant-id: ${{ secrets.AZURE_TENANT_ID }}
      azure-subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      azure-acr-client-id: ${{ secrets.ACR_CLIENT_ID }}
      azure-acr-name: ${{ secrets.ACR_NAME }}

  deploy:
    name: Deploy
    needs: [ set-env, import ]
    permissions:
      id-token: write
    uses: DFE-Digital/deploy-azure-container-apps-action/.github/workflows/deploy.yml@v5.0.0
    strategy:
      matrix:
        container_app: [
          "web",
          "worker"
        ]
        include:
          - container_app: "web"
            aca_name: "ACA_CONTAINERAPP_NAME"
            aca_client_id: "ACA_CLIENT_ID"
          - container_app: "worker"
            aca_name: "ACA_CONTAINERAPP_WORKER_NAME"
            aca_client_id: "ACA_WORKER_CLIENT_ID"
    with:
      environment: ${{ needs.set-env.outputs.environment }}
      docker-image-name: ${{ needs.set-env.outputs.image-name }}
      annotate-release: ${{ matrix.container_app == 'web' }}
    secrets:
      azure-tenant-id: ${{ secrets.AZURE_TENANT_ID }}
      azure-subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      azure-acr-name: ${{ secrets.ACR_NAME }}
      azure-aca-client-id: ${{ secrets[matrix.aca_client_id] }}
      azure-aca-name: ${{ secrets[matrix.aca_name] }}
      azure-aca-resource-group: ${{ secrets.ACA_RESOURCE_GROUP }}
